<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bestpay.ecurrency.operations.dal.mapper.IXxlJobLogGlueMapper">

	<resultMap id="XxlJobLogGlue" type="com.bestpay.ecurrency.operations.dal.model.XxlJobLogGlueDO" >
		<result column="id" property="id" jdbcType="DECIMAL"/>
	    <result column="job_group" property="jobGroup" jdbcType="DECIMAL"/>
	    <result column="job_name" property="jobName" jdbcType="VARCHAR"/>
	    <result column="glue_source" property="glueSource" jdbcType="VARCHAR"/>
	    <result column="glue_remark" property="glueRemark" jdbcType="VARCHAR"/>
	    <result column="add_time" property="addTime" jdbcType="VARCHAR"/>
	    <result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_name,
		t.glue_source,
		t.glue_remark,
		t.add_time,
		t.update_time
	</sql>

	<insert id="save" parameterType="com.bestpay.ecurrency.operations.dal.model.XxlJobLogGlueDO">
		<selectKey resultType="int" order="BEFORE" keyProperty="id">
			SELECT SEQ_QRTZ_TRIGGER.nextval as id from dual
		</selectKey>
		INSERT INTO T_QRTZ_TRIGGER_LOGGLUE (
			id,
			job_group,
			job_name,
			glue_source,
			glue_remark,
			add_time,
			update_time
		) VALUES (
		    #{id,jdbcType=DECIMAL},
			#{jobGroup,jdbcType=DECIMAL},
			#{jobName,jdbcType=VARCHAR},
			#{glueSource,jdbcType=VARCHAR},
			#{glueRemark,jdbcType=VARCHAR},
			sysdate,
		    sysdate
		)
	</insert>

	<select id="selectList" parameterType="java.util.HashMap" resultMap="XxlJobLogGlue">
		SELECT <include refid="Base_Column_List" />
		FROM T_QRTZ_TRIGGER_LOGGLUE t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobName != null and jobName != ''">
				AND t.job_name = #{jobName}
			</if>
		</trim>
		ORDER BY id DESC
	</select>

	<delete id="removeOld" parameterType="java.util.HashMap" >
		DELETE FROM T_QRTZ_TRIGGER_LOGGLUE
		WHERE id NOT in(
		SELECT id FROM(
		select b.id from (
		SELECT id FROM T_QRTZ_TRIGGER_LOGGLUE
		WHERE job_group = #{jobGroup} and job_name = #{jobName}
		ORDER BY update_time desc) rownum <![CDATA[ > ]]> 0 and rownum <![CDATA[ <= ]]> #{limit}
		) t1
		) AND job_group = #{jobGroup} and job_name = #{jobName}
	</delete>

	<delete id="delete" parameterType="java.util.HashMap" >
		DELETE FROM T_QRTZ_TRIGGER_LOGGLUE
		WHERE job_group = #{jobGroup} and job_name = #{jobName}
	</delete>

</mapper>